apply plugin: 'com.android.application'

android {
    def app = rootProject.ext.android
    compileSdkVersion app.compileSdkVersion as int
    buildToolsVersion app.buildToolsVersion

    defaultConfig {
        applicationId app.applicationId
        minSdkVersion app.minSdkVersion as int
        targetSdkVersion app.targetSdkVersion as int
        versionCode app.versionCode as int
        versionName app.versionName

        // dex突破65535的限制
        multiDexEnabled true
        // AndroidManifest.xml 里面UMENG_CHANNEL的value为 ${UMENG_CHANNEL_VALUE}
        manifestPlaceholders = [CHANNEL_VALUE: "channel_name"]
        //利用这个配置可以去掉三方库中无用的语言
        resConfigs "zh", "zh-rCN"
    }

    //PNG优化在默认情况下是打开的，我们可以在开发模式下禁用：
    if (project.hasProperty("devBuild")) {
        aaptOptions.cruncherEnabled = false
    }

    flavorDimensions "default"

    productFlavors {
        googleplay {
            dimension "default"
        }
        fir {
            dimension "default"
        }
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        // set to true 通过lint，打印出一些分析报告！
        quiet true
        // if true, 如果发现错误，将停止编译
        abortOnError false
        // if true, 仅仅报告错误的地方
        ignoreWarnings true
    }

    buildTypes {
        debug { // 为了不和 release 版本冲突
            applicationIdSuffix ".debug"
            debuggable true
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false //android studio 2.2 设置为false
            buildConfigField("boolean", "LOG_DEBUG", "true")
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            debuggable false
            minifyEnabled false
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies["SupportAppcompatV4"]
    implementation rootProject.ext.dependencies["SupportAppcompatV7"]
    implementation rootProject.ext.dependencies["SupportRecyclerViewV7"]
    implementation rootProject.ext.dependencies["SupportDesign"]
    implementation rootProject.ext.dependencies["SupportCardview"]
    implementation(rootProject.ext.dependencies["Butterknife"]) {
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.ext.dependencies["ButterknifeCompiler"]
    implementation rootProject.ext.dependencies["Glide"]
    implementation rootProject.ext.dependencies["GlideOkHttp"]
    implementation rootProject.ext.dependencies["Retrofit"]
    implementation rootProject.ext.dependencies["RetrofitConverterGson"]
    implementation rootProject.ext.dependencies["RetrofitAdapterRxJava2"]
    implementation rootProject.ext.dependencies["OkHttpLoggingInterceptor"]
    implementation rootProject.ext.dependencies["RxJava2"]
    implementation rootProject.ext.dependencies["RxAndroid2"]
    implementation rootProject.ext.dependencies["RxLifecycle2"]
    implementation rootProject.ext.dependencies["RxLifecycle2Android"]
    implementation rootProject.ext.dependencies["RxLifecycle2Components"]
    implementation rootProject.ext.dependencies["RxCache2"]
    implementation rootProject.ext.dependencies["Umeng"]
    implementation rootProject.ext.dependencies["Jsoup"]
    implementation 'com.uniquestudio:parsingplayer:2.0.4'
    implementation 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
    implementation 'com.google.android:flexbox:1.0.0'
    testImplementation 'junit:junit:4.12'
}
